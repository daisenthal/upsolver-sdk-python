
# Generated by Qodo Gen

# Dependencies:
# pip install pytest-mock
import pytest

class Test__Init__:

    # Initialize RestQueryApi with valid Requester and ResponsePollerBuilder instances
    def test_init_with_valid_parameters(self, mocker):
        from upsolver.client.requester import Requester
        from upsolver.client.poller import ResponsePollerBuilder
        from upsolver.client.query import RestQueryApi

        mock_requester = mocker.Mock(spec=Requester)
        mock_poller_builder = mocker.Mock(spec=ResponsePollerBuilder)

        api = RestQueryApi(requester=mock_requester, poller_builder=mock_poller_builder)

        assert api.requester == mock_requester
        assert api.poller_builder == mock_poller_builder


    # Initialize with None as poller_builder parameter
    def test_init_with_none_poller_builder(self, mocker):
        from upsolver.client.requester import Requester
        from upsolver.client.query import RestQueryApi

        mock_requester = mocker.Mock(spec=Requester)

        api = RestQueryApi(requester=mock_requester, poller_builder=None)

        assert api.requester == mock_requester
        assert api.poller_builder is None

    # Verify requester attribute is correctly set after initialization
    def test_requester_attribute_initialization(self, mocker):
        from upsolver.client.requester import Requester
        from upsolver.client.poller import ResponsePollerBuilder
        from upsolver.client.query import RestQueryApi

        mock_requester = mocker.Mock(spec=Requester)
        mock_poller_builder = mocker.Mock(spec=ResponsePollerBuilder)

        api = RestQueryApi(requester=mock_requester, poller_builder=mock_poller_builder)

        assert api.requester == mock_requester

    def test_connection_rollback_not_supported(mocker):
        from upsolver.dbapi.connection import Connection
        from upsolver.client.exceptions import NotSupportedError
        
        conn = Connection(token="dummy_token", api_url="http://dummy_url")
        with pytest.raises(NotSupportedError):
            conn.rollback()


    def test_connection_commit_not_supported(mocker):
        from upsolver.dbapi.connection import Connection
        from upsolver.client.exceptions import NotSupportedError
        
        conn = Connection(token="dummy_token", api_url="http://dummy_url")
        with pytest.raises(NotSupportedError):
            conn.commit()


    def test_connection_exit_no_error(mocker):
        from upsolver.dbapi.connection import Connection
        
        conn = Connection(token="dummy_token", api_url="http://dummy_url")
        assert conn.__exit__(None, None, None) is True
